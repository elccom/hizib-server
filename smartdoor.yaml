openapi: 3.0.3
info:
  title: Hizib - OpenAPI 3.0
  description: |-
    하이집
  termsOfService: http://swagger.io/terms/
  contact:
    email: webmaster@elcsoft.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://api.hizib.wikibox.kr
tags:
  - name: 관리자
    description: 관리자에 관련된사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 회원
    description: 회원가입 및 로그인에 관련된사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 날씨
    description: 날씨 정보와 관련된 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 단지
    description: 스마트도어가 설치된 단지들에 대한 정보 관리
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어
    description: 스마트도어 정보와 관련되 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 액션
    description: 스마트도어 문열기, 문닫기 등 액션에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 오너
    description: 스마트도어 오너에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 초대
    description: 스마트도어 초대에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 공지
    description: 스마트도어 공지사항에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 일정
    description: 스마트도어 일정에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 메세지
    description: 스마트도어 메세지 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 소지품
    description: 스마트도어 소지품 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 출입기록
    description: 스마트도어 출입기록에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 VOD
    description: 스마트도어 VOD에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: 스마트도어 게스트키
    description: 스마트도어 게스트키에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: fcm
    description: 푸시메세지 발송에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: ums
    description: 문자메세지 발송에 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: faq
    description: 자주하는 질문(FAQ) 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: qna
    description: Q&A 대한 사항들
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Code
    description: 코드 정보 관리
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /Admin:
    post:
      tags:
        - 관리자
      summary: "관리자 등록"
      description: "관리자가 등록되지 않은 경우, 로그인 하지 않고 등록 가능<br>관리자가 한명이라도 등록된 이후에는 /Admin/login에서 관리자로 로그인 후 등록할 수 있음<br><br>- 관리자자아이디는 영문, 숫자 4자이상 조건<br>- 관리자 비밀번호는 4자 이상 조건<br>- 비밀번호와 비밀번호 확인 일치여부 검증<br>- 핸드폰 번호 형식 검증<br>- 이메일 형식 검증<br><br>2023-06-23 ID형식 영문자와 숫자 조합 4자이상으로 변경<br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 관리자 ID 중복 가입 방지, 성명+핸드폰 중복 가입 방지, 성명+이메일 중복가입 방지"
      operationId: /Admin/joinProcess
      requestBody:
        description: 관리자테이블에 관리자데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                id :
                  type: integer
                  description: "[필수] 아이디"
                  example : "admin"
                passwd:
                  type: string
                  description: "[필수] 비밀번호"
                  example : 1234
                repasswd:
                  type: string
                  description: "[필수] 비밀번호 확인"
                  example : 1234
                name:
                  type: string
                  description: "[필수] 성명"
                  example : "관리자"
                handphone:
                  type: string
                  description: "[필수] 핸드폰"
                  example : "010-5555-6666"
                email:
                  type: string
                  description: "이메일"
                  example : "wemaster@hizib.com"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/admin'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put :
      tags:
        - 관리자
      summary: "[관리자] 관리자 정보 수정"
      description: "관리자로 로그인 후 관리자 본인 계정에 대한 정보 수정<br><br>- /Admin/login에서 관리자로 로그인해야만 접근 가능<br>- 비밀번호 4자이상<br>- 이전 비밀번호 검증<br>- 새 비밀번호와 새 비밀번호 확인과 유효성 체크<br>- 핸드폰 번호 형식 검증<br>- 이메일 형식 검증<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Admin/modifyProcess
      security:
        - bearerAuth: []
      requestBody:
        description: 관리자 테이블에 관리자 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                passwd:
                  type: string
                  description: "[필수] 이전 비밀번호"
                  example : 1234
                newpasswd:
                  type: string
                  description: "[필수] 새 비밀번호"
                  example : 1234
                repasswd:
                  type: string
                  description: "[필수] 새 비밀번호 확인"
                  example : 1234
                handphone:
                  type: string
                  description: "[필수] 핸드폰"
                  example : "010-2222-3333"
                email:
                  type: string
                  description: "이메일"
                  example : "test@test.com"
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/admin'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Admin/login:
    post:
      tags:
        - 관리자
      summary: "아이디와 패스워드를 통해 관리자 가져와 토큰 제공"
      description: "아이디와 패스워드를 통해 관리자 정보를 가져온 뒤<br>admin_id : 관리자 번호<br>exp : 유효기간<br>위 정보를 암호회된 토큰으로 리턴<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-06-28 JWT토큰 firebase-jwt 모듈로 교체<br>2023-07-04 response타입 변경"
      operationId: /Admin/login
      requestBody:
        description: 관리자 테이블에 관리자 데이터 변경
        content:
          application/json:
            schema:
              type: object
              properties:
                id :
                  type: string
                  description: "[필수] 아이디"
                  example : "admin"
                passwd:
                  type: string
                  description: "[필수] 비밀번호"
                  example : "1234"
      responses:
        '200':
          description: 성공
          content:
            application/json:
             schema:
              type: object
              properties:
                token :
                  type: string
                  description: "토큰"
                  example : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJhZG1pbl9pZCI6MSwiZXhwIjoxNjg4MjY0NjM2fQ.FtqOh5iCgZGce7vIRHq488PlHNid8wf8Vdz_6xX3Yt-xXx-h2TSOkfUFj1h7s6aW2K4lVk5dNwIcb-4WU_YH_A"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User:
    post:
      tags:
        - 회원
      summary: "회원 등록"
      description: "필요한 정보를 받아 회원 정보를 user 테이블에 등록<br>- 아이디 : 영문, 숫자 조합 6자 이상<br>- 비밀번호 : 4자 이상<br>- 비밀번호와 비밀번화 확인간 일치여부 확인<br>- 핸드폰 정규식으로 검사<br>- 이메일 정규식 검사<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 아이디 중복 가입 방지, 성명+핸드폰 중복 가입 방지, 성명+핸드폰 중복 가입 방지"
      operationId: /User/joinProcess
      requestBody:
        description: "회원테이블에 회원데이터 저장"
        content:
           application/json:
            schema:
              type: object
              properties:
                id :
                  type: string
                  description: "[필수] 아이디(영문, 숫자, 특수문자 조합 6자 이상)"
                  example : "test"
                passwd:
                  type: string
                  description: "[필수] 비밀번호(4자 이상)"
                  example : 1234
                repasswd:
                  type: string
                  description: "[필수] 비밀번호 확인"
                  example : 1234
                name:
                  type: string
                  description: "[필수] 성명"
                  example : "홍길동"
                fcm_token:
                  type: string
                  description: "FCM token 데이터"
                  example : "cHvWHcvETqaZHCLjLx5G66:APA91bHAsqQ6eS0YHmbyR8evT0cemKFt_E4ln0sszzZuaZXnDL95OajNWcAcfWY3GP4ewOni_g2yrXTHn1dRp_MEkAJjwCqy2MIWJgBpeYFGFFz0gCVl2EppfGyNXYAGu5H1O5HS3QHG"
                nickname:
                  type: string
                  description: "별명"
                  example : "테스터"
                ci:
                  type: string
                  description: "주민번호 대체 인증정보"
                  example : ""
                handphone:
                  type: string
                  description: "[필수] 핸드폰"
                  example : "010-2222-3333"
                email:
                  type: string
                  description: "이메일"
                  example : "test@test.com"
                isUse:
                  type: integer
                  description: "사용여부 1:사용중 0: 사용안함"
                  example : 1
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put :
      tags:
        - 회원
      summary: "[회원] 회원 정보 수정"
      description: "회원 정보 수정<br>-이전 비밀번호 일치 여부 확인<br>-새 비밀번호 4자 이상 입력 여부 검증<br>-새 비밀번호와 새 비밀번호 확인과 일치 여부 확인<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /User/modifyProcess
      security:
        - bearerAuth: []
      requestBody:
        description: "회원테이블에 회원데이터 수정"
        content:
          application/json:
            schema:
              type: object
              properties:
                passwd:
                  type: string
                  description: "이전 비밀번호"
                  example : 1234
                newpasswd:
                  type: string
                  description: "새 비밀번호"
                  example : 1234
                repasswd:
                  type: string
                  description: "새 비밀번호 확인"
                  example : 1234
                fcm_token:
                  type: string
                  description: "FCM token 데이터"
                  example : "cHvWHcvETqaZHCLjLx5G66:APA91bHAsqQ6eS0YHmbyR8evT0cemKFt_E4ln0sszzZuaZXnDL95OajNWcAcfWY3GP4ewOni_g2yrXTHn1dRp_MEkAJjwCqy2MIWJgBpeYFGFFz0gCVl2EppfGyNXYAGu5H1O5HS3QHG"
                nickname:
                  type: string
                  description: 별명
                  example : "테스터"
                ci:
                  type: string
                  description: 주민번호 대체 인증정보
                  example : ""
                handphone:
                  type: string
                  description: 핸드폰
                  example : "010-2222-3333"
                email:
                  type: string
                  description: 이메일
                  example : "test@test.com"
                isUse:
                  type: integer
                  description: "사용여부 1:사용중 0: 사용안함함"
                  example : 1
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/login:
    post:
      tags:
        - 회원
      summary: "아이디와 패스워드로 토큰을 생성"
      description: "아이디와 패스워드를 통해 회원 정보를 가져온 뒤<br>user_id : 회원 번호<br>exp : 유효기간<br>위 정보를 암호회된 토큰으로 리턴<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경><br>2023-06-28 JWT토큰 firebase-jwt 모듈로 교체<br>2023-07-04 response타입 변경"
      operationId: /User/login
      requestBody:
        description: 사용자 테이블에 사용자 데이터 가져와 토큰 생성
        content:
          application/json:
            schema:
              type: object
              properties:
                id :
                  type: string
                  description: 아이디
                  example : "kks0816"
                passwd:
                  type: string
                  description: 비밀번호
                  example : "1234"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: string
                description: 토큰
                example : ""
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/me:
    get:
      tags:
        - 회원
      summary: "[회원] 내 정보를 가져오는 메소드"
      description: "/User/login에서 얻은 토큰정보를 이용해 내 회원 정보를 json형태로 가져옮<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /User/me
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: string
                description: 토큰
                example : ""
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: 'User의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 회원
      summary: "[키오스크, 관리자] 회원번호로 회원정보 조회"
      description: "키오스크 혹은 관리자가 회원 정보를 가지고 회원 조회<br>- [필수]관리자 토큰 - 모든 정보 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-06 키오스크에서도 기능 사용하게 권한 열음"
      operationId: /User/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 회원
      summary: "[관리자] 회원 정보를 수정"
      description: "/User/login으로 로그인 한 사용자는 본인 것만 수정<br>/Admin/login으로 로그인 한 사용자는 모든 회원 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /User/masterModifyProcess
      requestBody:
        description: 회원 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 성명
                  example: "김경신"
                passwd:
                  type: string
                  description: 이전 비밀번호
                  example : 1234
                nickname:
                  type: string
                  description: 닉네임
                  example : "홍길동"
                handphone:
                  type: string
                  description: 핸드폰
                  example : "010-5125-6889"
                email:
                  type: string
                  description: 이메일
                  example : "elccom@naver.com"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 회원
      summary: "[관리자] 본인 및 관리자만 회원 정보 삭제"
      description: "관리자만 회원 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /User/deleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/nickname:          
    post:
      tags:
        - 회원
      summary: "[회원] 닉네임 업데이트"
      description: "/User/login에서 발급받은 토큰으로 인증한 회원의 닉네임을 업데이트하는 메소드<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 회원만 접근 가능하게 변경하였고 닉네임만 수정되도록 변경"
      operationId: /User/nickname
      requestBody:
        description: 닉네임 업데이트
        content:
          application/json:
            schema:
              properties:
                 nickname:
                   type: string
                   description: "바꿀닉네임"
                   example: "홍길동"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: string
                description: 토큰
                example : ""
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/pictureUpload:
    post:
      tags:
        - 회원
      summary: "[회원] 프로필 사진 업데이트"
      description: "프로필 사진을 업데이트하는 메소드<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 기존 파일이 있는 경우, 삭제시 퍼미션 애러가 발생해 관련 코드를 변경"
      operationId: /User/pictureUpload
      requestBody:
        description: 얼굴사진 업데이트
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: "새로 등록할 파일 이미지(gif,jpg,jpeg,png)"
                isDel :
                  type: boolean
                  description: "기존 이미지 삭제 처리 여부"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/faceUpload:          
    post:
      tags:
        - 회원
      summary: "[회원] 얼굴사진 업데이트"
      description: "얼굴사진을 업데이트하는 메소드 faces필드에 array 형태로 등록(파일전송규격 안맞음)<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 기존 파일이 있는 경우, 삭제시 퍼미션 애러가 발생해 관련 코드를 변경"
      operationId: /User/facesUpload
      requestBody:
        description: 얼굴사진 업데이트
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                idx :
                  type: integer
                  description: "이미지 번호(1 ~ 20)"
                isDel :
                  type: boolean
                  description: "기존 이미지 삭제 처리 여부"
                file:
                  type: string
                  format: binary
                  description: "새로 등록할 파일 이미지(gif,jpg,jpeg,png)"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/findId:
    get:
      tags:
        - 회원
      summary: "성명과 핸드폰번호 혹은 성명과 이메일로 회원 아이디를 핸드폰 혹은 이메일로 발송"
      description: "성명 + 핸드폰번호로 회원정보 검색 후 핸드폰으로 아이디 발송<br>성명 + 이메일로 회원정보 검색 후 이메일로 아이디발송<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 핸드폰형식(010-0000-0000)이 아닌 경우 처리가 안돼서 자동으로 핸드폰 형식으로 처리되도록 수정"
      operationId: /User/findId
      parameters:
        - name: name
          in: query
          description: 성명
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: 아이디를 수신받을 방법 선택. 핸드폰인 경우 1, 이메일인 경우 2
          required: false
          schema:
            type: integer
        - name: handphone
          in: query
          description: 핸드폰
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: 이메일
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/findPasswd:
    get:
      tags:
        - 회원
      summary: "아이디와 핸드폰번호 혹은 아이디와 이메일로 회원 임시비밀번호 핸드폰 혹은 이메일로 발송"
      description: "아이디 + 핸드폰번호로 회원정보 검색 후 핸드폰으로 아이디 발송<br>아이디 + 이메일로 회원정보 검색 후 이메일로 아이디발송<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 핸드폰형식(010-0000-0000)이 아닌 경우 처리가 안돼서 자동으로 핸드폰 형식으로 처리되도록 수정"
      operationId: /User/findPasswd
      parameters:
        - name: id
          in: query
          description: "아이디"
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: "임시 비밀번호를 수신받을 방법 선택. 핸드폰인 경우 1, 이메일인 경우 2"
          required: true
          schema:
            type: integer
        - name: handphone
          in: query
          description: "핸드폰"
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: "이메일"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /User/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_user_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체여부"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 회원
      summary: "[관리자] 회원 목록"
      description: '회원 리스트를 배열로 가져오기<br><br>2023-07-04 신규 추가'
      operationId: /User/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Weather/{areacode}:
    parameters:
      - name: areacode
        in: path
        description: '네이버날씨의 지역코드 정보'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 날씨
      summary: "지역코드정보를 가지고 현재 시간의 날씨 조회"
      description: "네이버지역코드 정보를 가지고 현재 시간의 날씨 및 예보 정보를 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Weather/search
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Weather/areacode:
    parameters:
      - name: keyword
        in: query
        description: '검색어'
        required: true
        schema:
          type: string
    get:
      tags:
        - 날씨
      summary: "[관리자] 검색어 정보를 가지고 네이버날씨에서 지역코드정보를 검색"
      description: '지역명을 검색어로 검색하면 네이버날씨의 지역코드 정보가 <br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Weather/areacode
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items :
                  type: object
                  properties:
                    code :
                      type: string
                      example : '09545101'
                    name :
                      type: string
                      example : '서울특별시 금천구 가산동'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorGroup:
    post:
      tags:
        - 스마트도어 단지
      summary: "[관리자] 스마트도어 단지 등록"
      description: "스마트도어 단지 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 단지명 중복 가입 방지"
      operationId: /SmartdoorGroup/joinProcess
      requestBody:
        description: 관리자가 스마트도어 단지 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties :
                areacode :
                  type: string
                  example : "09545101"
                name : 
                  type : string
                  example : "사무실"
                address :
                  type: object
                  properties :
                    zipcode :
                      type: string
                      example : '08510'
                    addressMain :
                      type: string
                      example : '서울특별시 금천구 디지털로9길 99'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_group'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorGroup/{smartdoor_group_id}:
    parameters:
      - name: smartdoor_group_id
        in: path
        description: 'SmartdoorGroup의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 단지
      summary: "단지 정보를 가지고 단지를 조회"
      description: "smartdoor_group_id로 단지 정보 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-05 키오스크에서 최초 등록시 로그인 정보 없기 때문에 모든 사용자가 사용할 수 있도록 오"
      operationId: /SmartdoorGroup/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_group'          
        '400':
          description: "전송된 데이터 형식에 문제가 있습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터 형식에 문제가 있습니다."
        '401':
          description: "로그인 후 이용해 주세요."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "로그인 후 이용해 주세요."
        '404':
          description: "이미 등록된 단지명입니다. 다른 단지명을 입력해 주십시오."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "이미 등록된 단지명입니다. 다른 단지명을 입력해 주십시오."
        '500':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "500"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
    put:
      tags:
        - 스마트도어 단지
      summary: "[관리자] 관리자가 단지 정보를 수정"
      description: "단지 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 단지명 중복 수정 방지"
      operationId: /SmartdoorGroup/modifyProcess
      security:
        - bearerAuth: []
      requestBody:
        description: 관리자가 스마트도어 단지 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties :
                areacode :
                  type: string
                  example : "09545101"
                name : 
                  type : string
                  example : "사무실"
                address :
                  type: object
                  properties :
                    zipcode :
                      type: string
                      example : '08510'
                    addressMain :
                      type: string
                      example : '서울특별시 금천구 디지털로9길 99'
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_group'       
        '400':
          description: "전송된 데이터 형식에 문제가 있습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터 형식에 문제가 있습니다."
        '401':
          description: "로그인 후 이용해 주세요."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "로그인 후 이용해 주세요."
        '404':
          description: "존재하지 않는 스마트도어 단지 정보입니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "존재하지 않는 스마트도어 단지 정보입니다."
        '440':
          description: "단지 정보를 저장하는데 실패하였습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "440"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "단지 정보를 저장하는데 실패하였습니다."
        '500':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "500"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
    delete:
      tags:
        - 스마트도어 단지
      summary: "[관리자] 관리자가 스마트도어 단지 정보 삭제"
      description: "관리자가 단지 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경"
      operationId: deleteSmartdoorGroup
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "전송된 데이터 형식에 문제가 있습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터 형식에 문제가 있습니다."
        '401':
          description: "로그인 후 이용해 주세요."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "로그인 후 이용해 주세요."
        '404':
          description: "존재하지 않는 스마트도어 단지 정보입니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "존재하지 않는 스마트도어 단지 정보입니다."
        '440':
          description: "단지 정보를 삭제하는데 실패하였습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "440"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "단지 정보를 삭제하는데 실패하였습니다."
        '500':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "500"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
  /SmartdoorGroup/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_group_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체여부"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 단지
      summary: "[본인, 키오스크, 관리자] 스마트도어 단지 목록"
      description: '스마트도어 단지 리스트를 배열로 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorGroup/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor:
    post:
      tags:
        - 스마트도어
      summary: "[관리자] 스마트도어 등록"
      description: "관리자가 스마트도어 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 같은 단지 내 동/호수 중복 가입 방지"
      operationId: /Smartdoor/joinProcess
      requestBody:
        description: 스마트도어 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_group_id :
                  type: integer
                  description: 단지정보
                  example : 1
                code:
                  type: string
                  description: 제품시리얼넘버
                  example : "20230315001"
                name:
                  type: string
                  description: 제품 별칭
                  example : "사무실"
                dong:
                  type: string
                  description: "설치 동"
                  example : ""
                ho:
                  type: string
                  description: "설치 호"
                  example : "1003호"
                status:
                  type: integer
                  description: "설치상태 1:출고 2:오너미등록 3:사용중 9:사용안함"
                  example : 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put :
      tags:
        - 스마트도어
      summary: "[본인, 키오스크] 스마트도어 정보 수정"
      description: "스마트도어 정보 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 같은 단지 내 동/호수 중복 수정 방지"
      operationId: /Smartdoor/modifyProcess
      security:
        - bearerAuth: []
      requestBody:
        description: 나의 스마트도어 테이블에 스마트도어 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 스마트도어 명칭
                  example : "우리집"
                dong:
                  type: string
                  description: 설치돈 동
                  example : "407동"
                ho:
                  type: string
                  description: 설치된 호수
                  example : "1004호"
                ble:
                  type: string
                  description: ble address
                  example : "2C:02:9F:51:1D:A3"
                isDoorOpen:
                  type: integer
                  description: "문열림 상태 1:열림 0: 닫힘"
                  example : 1
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/{smartdoor_id}:
    parameters:
      - name: smartdoor_id
        in: path
        description: 'Smartdoor의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어
      summary: "[본인, 키오스크, 관리자] 스마트도어 정보를 가지고 스마트도어 조회"
      description: "본인, 키오스크 및 관리자가 스마트도어 정보를 가지고 스마트도어 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Smartdoor/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어
      summary: "[본인, 관리자] 스마트도어 정보를 수정"
      description: "본인 및 관리자 및 오너, 키오스크에서만 스마트도어 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 같은 단지 내 동/호수 중복 수정 방지"
      operationId: /Smartdoor/masterModifyProcess
      requestBody:
        description: 스마트도어 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 제품 별칭
                  example : "사무실"
                dong:
                  type: string
                  description: "설치 동"
                  example : ""
                ho:
                  type: string
                  description: "설치 호"
                  example : "1003호"
                status:
                  type: integer
                  description: "설치상태 1:출고 2:오너미등록 3:사용중 9:사용안함"
                  example : 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어
      summary: "[본인, 관리자] 스마트도어 정보 삭제"
      description: "관리자만 스마트도어 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteSmartdoor
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/findByCode:
    parameters:
      - name : code
        in: query
        description: 'Smartdoor의 시리얼코드'
        required: true
        schema:
          type: string
    get :
      tags:
        - 스마트도어
      summary: "시리얼코드로 스마트도어 정보 찾기"
      description: "일반 사용자 조회시, 미등록 제품과 내 제품만 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Smartdoor/findByCode
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/me:
    get :
      tags:
        - 스마트도어
      summary: "[본인] 스마트도어 정보 가져오기"
      description: "현재 로그인 된 사용자의 스마트도어 정보 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Smartdoor/me
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor'        
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/owner:
    get :
      tags:
        - 스마트도어
      summary: "[키오스크] 스마트도어의 오너 정보 가져오기"
      description: "/Smartdoor/token으로 로그인한 키오스크가 나의 스마트도어의 오너 정보 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Smartdoor/owner
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
                  message:
                    type: string
                    description: 에러메세지
                  parmas:
                    $ref: '#/components/schemas/smartdoor_user'        
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/token:
    parameters:
      - name: smartdoor_id
        in: query
        description: "스마트도어 정보"
        schema:
          type: integer
          example: 1
    get :
      tags:
        - 스마트도어
      summary: "[키오스크] 스마트도어의 토큰 가져오기"
      description: '키오스크에서 스마트도어의 토큰 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Smartdoor/token
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: string
                description: 토큰
                example : ""
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체여부"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어
      summary: "[본인, 키오스크, 관리자] 등록이 안된 스마트도어 리스트 목록"
      description: '등록이 안된 스마트도어 리스트를 배열로 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Smartdoor/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/initProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[관리자, 키오스크] 스마트도어 초기화 요청"
      description: "스마트도어의 모든 정보를 초기화 시키는 매소드<br>2023-09-11 신규"
      operationId: /Smartdoor/initProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: "서버쪽 초기화 시킴(mqtt로 도어락도 초기화 요청)"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/doorOpenProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[본인, 키오스크] APP에서 스마트도어 문열기 요청"
      description: "APP에서 스마트도어 문열기 요청<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Smartdoor/doorOpenProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: "요청결과 성공여부(문열기 성공여부는 mqtt로 받음)"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/doorCloseProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[본인, 키오스크] APP에서 스마트도어 문닫기 요청"
      description: '/User/login으로 로그인한 사용자가 APP에서 스마트도어 문닫기 요청<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Smartdoor/doorCloseProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 요청결과 성공여부(문닫기 성공여부는 mqtt로 받음)
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/channelJoinProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[본인] APP에서 스마트도어 영상통화 연결 요청"
      description: '/User/login으로 로그인한 사용자가 APP에서 스마트도어 영상통화 연결 요청<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Smartdoor/channelJoinProcess
      requestBody:
        description: 영상통화를 위해 필수 정보 전달
        content:
          application/json:
            schema:
              type: object
              properties:
                channelName :
                  type: string
                  description: 채널네임
                  example : 123456
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  appID:
                    type: string
                    description: Agora AppID
                  appCertificate:
                    type: string
                    description: Agora AppCertificate
                  channelName:
                    type: string
                    description: "채널이름"
                  token:
                    type: string
                    description: "Agora token"
                  uid:
                    type: string
                    description: "uid"
                  startDate:
                    type: string
                    description: "시작시간"
                  stopDate:
                    type: string
                    description: "종료시간"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/doorbellPushProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[키오스크] 도어벨을 눌러서 알람 받기 설정된 오너에게 push메세지 발송"
      description: '/Smartdoor스마트도어 토큰을 이용해 오너에게 push 발송'
      operationId: /Smartdoor/doorbellPushProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/motionDetectProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[키오스크] 모션감지가 된 경우 오너에게 push메세지 발송"
      description: ''
      operationId: /Smartdoor/motionDetectProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Smartdoor/guestkeyJoinProcess:
    post :
      tags:
        - 스마트도어 액션
      summary: "[본인] APP에서 게스트키 발행"
      description: ''
      operationId: /Smartdoor/guestkeyJoinProcess
      requestBody:
        description: 스마트도어 게스트키 발행에 필요한 정보
        content:
          application/json:
            schema:
              type: object
              properties:
                handphone :
                  type: string
                  description: "핸드폰번호"
                  example : "010-5125-6889"
                passwd :
                  type: string
                  description: "비밀번호(최대8자리)"
                  example : "12345678"
                startDate:
                  type: string
                  description: "사용기간 시작일(YYYY-mm-dd HH:mm:ss)"
                  example : "2023-04-10 00:00:00"
                stopDate:
                  type: string
                  description: "사용기간 종료일(YYYY-mm-dd HH:mm:ss)"
                  example : "2023-04-10 23:00:00"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUser:
    post:
      tags:
        - 스마트도어 오너
      summary: "[회원, 관리자] 스마트도어 오너 등록"
      description: "회원 혹은 관리자가 스마트도어 오너 등록<br>등록 후 mqtt로 등록했다는 request : /SmartdoorUser/joinProcess를 키오스크에 보냄<br>키오스크의 mqtt.py에서 받아 처리<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/joinProcess
      requestBody:
        description: 스마트도어 오너 테이블에 정보 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                user_id:
                  type: integer
                  description: 회원정보
                  example : 1
                isOwner:
                  type: integer
                  description: "오너여부 (1:오너, 0:구성원)"
                  example : 1
                isDoorbell:
                  type: integer
                  description: "도어벨 푸시 사용여부(1:사용, 0:사용안함)"
                  example : 1
                isAccessRecord:
                  type: integer
                  description: "자동녹화 기능"
                  example : 1
                isMotionDetect:
                  type: integer
                  description: "모션 감지 푸시 사용여부(1:사용, 0:사용안함)"
                  example : 1
                isUse:
                  type: integer
                  description: "사용여부(1:사용, 0:사용안함)"
                  example : 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 오너
      summary: "[본인] 스마트도어 오너 정보를 수정"
      description: "<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/modifyProcess
      requestBody:
        description: 스마트도어 오너 테이블에 정보 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                isOwner:
                  type: integer
                  description: "오너여부 1:오너 0:초대사용자"
                  example : 1
                isDoorbell:
                  type: integer
                  description: "도어벨알람 1:사용 0:사용안함"
                  example : 1
                isAccessRecord:
                  type: integer
                  description: "침입기록 1:사용 0:사용안함"
                  example : 1
                isMotionDetect:
                  type: integer
                  description: "모션감지 1:사용 0:사용안함"
                  example : 1
                isUse:
                  type: integer
                  description: "사용여부 1:사용 0:사용안함"
                  example : 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUser/{smartdoor_user_id}:
    parameters:
      - name: smartdoor_user_id
        in: path
        description: 'SmartdoorUser의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 오너
      summary: "[본인, 관리자] 스마트도어 오너 조회"
      description: "본인 혹은 관리자가 smartdoor_user_id 값을 가지고 smartdoor_user 테이블 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 오너
      summary: "[본인, 관리자] 스마트도어 오너 정보를 수정"
      description: "본인 혹은 관리자가 smartdoor_user_id 값을 가지고 smartdoor_user 테이블 정보 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/masteModifyProcess
      security:
        - bearerAuth: []
      requestBody:
        description: 스마트도어 오너 테이블에 정보 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                isOwner:
                  type: integer
                  description: "오너여부 1:오너 0:초대사용자"
                  example : 1
                isDoorbell:
                  type: integer
                  description: "도어벨알람 1:사용 0:사용안함"
                  example : 1
                isAccessRecord:
                  type: integer
                  description: "침입기록 1:사용 0:사용안함"
                  example : 1
                isMotionDetect:
                  type: integer
                  description: "모션감지 1:사용 0:사용안함"
                  example : 1
                isUse:
                  type: integer
                  description: "사용여부 1:사용 0:사용안함"
                  example : 1
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 오너
      summary: "[본인, 관리자] 스마트도어 오너 정보 삭제"
      description: "본인 및 관리자가 smartdoor_user_id 값을 가지고 smartdoor_user 테이블에서 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/masteDeleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUser/me:
    get:
      tags:
        - 스마트도어 오너
      summary: "[본인] 스마트도어 사용자 정보 가져오기"
      description: "/User/login으로 로그인 한 회원 데이터에서 smartdoor_user 테이블 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUser/me
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUser/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 오너
      summary: 스마트도어 리스트 목록
      description: '해당 기기의 스마트도어 리스트를 배열로 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorUser/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_user'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUserInvite:
    post:
      tags:
        - 스마트도어 초대
      summary: "[오너] 사용자를 초대 등록"
      description: "오너가 name, handphone 정보로 초대장을 문자로 발송<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUserInvite/joinProcess
      requestBody:
        description: 스마트도어 초대 테이블에 정보 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                name :
                  type: string
                  description: 성명
                  example : "김경신"
                handphone:
                  type: string
                  description: "핸드폰번호"
                  example : "010-5125-6889"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user_invite'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUserInvite/{smartdoor_user_invite_id}:
    parameters:
      - name: smartdoor_user_invite_id
        in: path
        description: 'SmartdoorUseInvite의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 초대
      summary: "[본인, 관리자] 초대 데이터 하나 가져오기"
      description: "본인 및 관리자가 초대 데이터 하나 가져오기<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUserInvite/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_user_invite' 
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 초대
      summary: "[본인,관리자] 스마트도어 초대 정보 삭제"
      description: "본인 및 관리자가 스마트도어 초대 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUserInvite/deleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorUserInvite/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_user_invite_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: smartdoor_id
        in: query
        description: "스마트도어정보보"
        schema:
          type: integer
          example: 1
      - name: name
        in: query
        description: "이름"
        schema:
          type: string
          example: ""
      - name: handphone
        in: query
        description: "핸드폰"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 초대
      summary: "[본인, 관리자] 스마트도어 초대 정보를 가지고 스마트도어 초대 조회"
      description: "본인 및 관리자가 스마트도어 초대 정보를 가지고 스마트도어 초대 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorUserInvite/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_user_invite'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorNotice:
    post:
      tags:
        - 스마트도어 공지
      summary: "[본인, 관리자] 스마트도어 공지 등록"
      description: "/User/login으로 로그인 한 경우, smartdoor_id 값 필요 없음<br>/Admin/login으로 로그인 한 경우, smartdoor_id 값 필수<br>스마트도어 공지 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorNotice/joinProcess
      requestBody:
        description: 스마트도어 공지 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id:
                  type: integer
                  description: "smartdoor_id"
                  example : 1
                title:
                  type: string
                  description: "제목"
                  example : "비가 오니 우산 챙겨나가"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                 $ref: '#/components/schemas/smartdoor_notice'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorNotice/{smartdoor_notice_id}:
    parameters:
      - name: smartdoor_notice_id
        in: path
        description: 'SmartdoorNotice의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 공지
      summary: "[본인, 키오스크, 관리자] 스마트도어 공지 조회"
      description: "<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorNotice/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_notice'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 공지
      summary: "[본인,관리자] 스마트도어 공지 정보를 수정"
      description: "본인 혹은 관리자가 스마트도어 공지 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorNotice/masterModifyProcess
      requestBody:
        description: 스마트도어 공지 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: "비가 안오니 우산 챙겨지마"
                  example : 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_notice'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 공지
      summary: "[본인,관리자] 스마트도어 공지 정보 삭제"
      description: "스마트도어 공지 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteSmartdoorNotice
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorNotice/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_notice_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 공지
      summary: 스마트도어 공지 정보를 가지고 스마트도어 공지 조회
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorNotice/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_notice'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorSchedule:
    post:
      tags:
        - 스마트도어 일정
      summary: "[본인, 관리자] 스마트도어 일정 등록"
      description: "/User/login으로 로그인한 경우, smartdoor_id 값은 없어도 됨<br>/Admin/login으로 로그인 한 경우, smartdoor_id 값은 필수<br>스마트도어 일정 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId:  /SmartdoorSchedule
      requestBody:
        description: "스마트도어 일정 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: "smartdoor_id"
                  example : 1
                dday :
                  type: string
                  description: "일자"
                  example : "2023-03-21"
                name:
                  type: string
                  description: "일정명"
                  example : "가족모임임"
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_schedule'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorSchedule/{smartdoor_schedule_id}:
    parameters:
      - name: smartdoor_schedule_id
        in: path
        description: 'SmartdoorSchedule의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 일정
      summary: "[본인, 키오스크, 관리자] 스마트도어 일정 조회"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: getDataAtSmartdoorSchedule
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_schedule'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 일정
      summary: "[본인, 관리자] 스마트도어 일정 정보를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: modifySmartdoorSchedule
      requestBody:
        description: "스마트도어 일정 테이블에 데이터 수정"
        content:
          application/json:
            schema:
              type: object
              properties:
                dday :
                  type: string
                  description: "일자"
                  example : "2023-03-21"
                name:
                  type: string
                  description: "일정명"
                  example : "가족모임임"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_schedule'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 일정
      summary: "[본인, 관리자] 스마트도어 일정 정보 삭제"
      description: "스마트도어 공지 일정 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteSmartdoorSchedule
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorSchedule/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_schedule_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: startDate
        in: query
        description: "기간 시작"
        schema:
          type: string
          example: ""
      - name: stopDate
        in: query
        description: "기간 종료"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 일정
      summary: 스마트도어 일정 정보를 가지고 스마트도어 일정 조회
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorSchedule/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_schedule'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorMessage:
    post:
      tags:
        - 스마트도어 메세지
      summary: "[본인, 관리자] 스마트도어 메세지 등록"
      description: "/User/login으로 로그인 한 경우, from_user_id는 필요 없음<br>/Admin/login으로 로그인 한 경우, from_user_id는 필수<br>스마트도어 메세지 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 메세지 저장 후 mqtt 발송 대상 부분 오류로 소스 변경"
      operationId: /SmartdoorMessage/joinProcess
      requestBody:
        description: "스마트도어 메시지 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                from_user_id :
                  type: integer
                  description: 보내는 사람 정보
                  example : 1
                to_user_id :
                  type: integer
                  description: 받는 사람 정보
                  example : 15
                msg:
                  type: string
                  description: "메세지"
                  example : "테스트 메세지 보냅니다."
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_message'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorMessage/{smartdoor_message_id}:
    parameters:
      - name: smartdoor_message_id
        in: path
        description: 'SmartdoorMessage의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 메세지
      summary: "[본인, 관리자] 스마트도어 메세지 조회"
      description: "스마트도어 메세지 정보를 가지고 스마트도어 메세지 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: getDataAtSmartdoorMessage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_message'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 메세지
      summary: "[본인, 관리자] 스마트도어 메세지 정보를 수정"
      description: "스마트도어 메세지 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorMessage/masterModifyProcess
      requestBody:
        description: "스마트도어 메시지 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                from_user_id :
                  type: integer
                  description: 보내는 사람 정보
                  example : 1
                to_user_id :
                  type: integer
                  description: 받는 사람 정보
                  example : 15
                msg:
                  type: string
                  description: "메세지"
                  example : "테스트 메세지 보냅니다."
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_message'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 메세지
      summary: "[본인, 관리자] 스마트도어 메세지 정보 삭제"
      description: "스마트도어 공지 메세지 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteSmartdoorMessage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorMessage/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_message_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: startDate
        in: query
        description: "등록일자 조회 시작일"
        schema:
          type: string
          example: ""
      - name: stopDate
        in: query
        description: "등록일자 조회 종료일"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 메세지
      summary: "[본인, 키오스크, 관리자] 스마트도어 메세지 목록"
      description: "<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorMessage/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_message'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorItem:
    post:
      tags:
        - 스마트도어 소지품
      summary: "[본인, 관리자] 사용자가 스마트도어 소지품 등록"
      description: "사용자가 스마트도어 소지품 등록<br>회원의 경우, name 데이터만 필요하고<br>관리자의 경우, smartdoor_id, user_id, name 값이 필요함<br><br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 코드 등록시 정렬 순서 재정리<br>2023-07-04 smartdoor_id 없이 user_id로 만으로 등록 가능하게 수정"
      operationId: /SmartdoorItem/joinProcess
      requestBody:
        description: 스마트도어 소지품 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id:
                  type: integer
                  description: 스마트도어정보
                  example : 1
                user_id:
                  type: integer
                  description: 회원정보(회원 로그인시 필요없음)
                  example : 1
                name:
                  type: string
                  description: 소지품명
                  example : "손수건"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_item'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorItem/{smartdoor_item_id}:
    parameters:
      - name: smartdoor_item_id
        in: path
        description: 'SmartdoorItem의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 소지품
      summary: "[본인, 관리자] 스마트도어 소지품 조회"
      description: "smartdoor_item_id로 스마트도어 소지품 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorItem/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_item'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 소지품
      summary: "[본인,관리자] 스마트도어 소지품 정보를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 smartdoor_id 없이 user_id로 만으로 수정 가능하게 변경'
      operationId: /SmartdoorItem/masterModifyProcess
      requestBody:
        description: 스마트도어 소지품 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_item_id :
                  type: integer
                  description: 스마트도어 아이템 정보
                  example : 1
                name:
                  type: string
                  description: 소지품명
                  example : "손수건"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_item'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 소지품
      summary: "[본인,관리자] 스마트도어 소지품 정보 삭제"
      description: "본인 혹은 관리자가 스마트도어 공지 소지품 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteSmartdoorItem
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorItem/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_item_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 소지품
      summary: "스마트도어 소지품 목록"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorItem/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_item'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorLog:
    post:
      tags:
        - 스마트도어 출입기록
      summary: "[키오스크] 스마트도어 출입기록 등록"
      description: "/Smartdoor/token으로 로그안 키오스크에서 스마트도어 출입기록 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorLog/joinProcess
      requestBody:
        description: 스마트도어 출입기록 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                user_id:
                  type: integer
                  description: 회원 정보
                  example : 1
                type:
                  type: integer
                  description: 구분
                  example : 98
                code:
                  type: string
                  description: 결과코드
                  example : "0000"
                name:
                  type: string
                  description: 결과메세지지
                  example : "김경신 고객님이 APP에서 문열기에 성공했습니다."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_log'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorLog/{smartdoor_log_id}:
    parameters:
      - name: smartdoor_log_id
        in: path
        description: 'SmartdoorLog의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 출입기록
      summary: "[본인, 키오스크, 관리자] 스마트도어 출입기록 조회"
      description: "스마트도어 출입기록 정보를 가지고 스마트도어 출입기록 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorLog/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_log'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 출입기록
      summary: "[키오스크, 관리자] 스마트도어 출입기록 정보를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorLog/masterModifyProcess
      requestBody:
        description: 스마트도어 출입기록 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                user_id:
                  type: integer
                  description: 회원 정보
                  example : 1
                type:
                  type: integer
                  description: 구분
                  example : 98
                code:
                  type: string
                  description: 결과코드
                  example : "0000"
                name:
                  type: string
                  description: 결과메세지지
                  example : "김경신 고객님이 APP에서 문열기에 성공했습니다."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_log'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 출입기록
      summary: "[키오스크, 관리자] 스마트도어 출입기록 정보 삭제"
      description: "스마트도어 공지 출입기록 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorLog/masterDeleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorLog/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_log_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 출입기록
      summary: "스마트도어 출입기록 목록"
      description: '특정한 스마트도어 정보를 가지고 스마트도어 출입기록 목록을 리스트 형태의 목록으로 제공<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorLog/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_log'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorVod:
    post:
      tags:
        - 스마트도어 VOD
      summary: "[키오스크,관리자] 스마트도어 VOD 등록"
      description: "키오스크에서 스마트도어 VOD 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorVod/joinProcess
      requestBody:
        description: 스마트도어 VOD 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                file:
                  type: string
                  description: 파일(form or base64)
                  example : ""
                comment:
                  type: string
                  description: 메모
                  example : "외부 침입이 감지되어 촬영"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_vod'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorVod/{smartdoor_vod_id}:
    parameters:
      - name: smartdoor_vod_id
        in: path
        description: 'SmartdoorVod의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 VOD
      summary: "[회원, 키오스크,관리자] 스마트도어 VOD 조회"
      description: '해당 스마트도어나 관리자가 스마트도어 VOD 정보를 가지고 스마트도어 VOD 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorVod/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_vod'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 VOD
      summary: "[키오스크,관리자] 스마트도어 VOD 정보를 수정"
      description: "스마트도어 VOD 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorVod/masterModifyProcess
      requestBody:
        description: 스마트도어 VOD 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                gcode:
                  type: string
                  description: 폴더(일자)
                  example : "20230318"
                code:
                  type: string
                  description: 파일명(시분)
                  example : "0901"
                filepath:
                  type: string
                  description: "파일위치 /home/hizib/vod/{smartdoor_id}/{gcode}/{code}.mp4"
                  example : "/home/hizib/vod/1/20230318/0901.mp4"
                fileurl:
                  type: string
                  description: "파일URL /vod/{smartdoor_id}/{gcode}/{code}.mp4"
                  example : "/vod/1/20230318/0901.mp4"
                filename:
                  type: string
                  description: "{code}.mp4"
                  example : "0901.mp4"
                comment:
                  type: string
                  description: 메모
                  example : "외부 침입이 감지되어 촬영"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_vod'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 VOD
      summary: "[키오스크,관리자] 스마트도어 VOD 정보 삭제"
      description: "스마트도어 공지 VOD 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorVod/deleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorVod/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_vod_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 VOD
      summary: "스마트도어 VOD 목록"
      description: '특정한 스마트도어 정보를 가지고 스마트도어 VOD를 리스트 형태 목록으로 제공<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorVod/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_vod'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorGuestkey:
    post:
      tags:
        - 스마트도어 게스트키
      summary: "[본인,키오스크,관리자] APP에서 스마트도어 게스트키 등록"
      description: "/User/login으로 로그인한 경우, user_id 및 smartdoor_id 필요 없음<br>/Admin/login으로 로그인 한 경우, smartdoor_id 와 user_id 모두 필요<br>키오스크에서 스마트도어 게스트키 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorGuestkey/joinProcess
      requestBody:
        description: 스마트도어 게스트키 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                user_id :
                  type: integer
                  description: 회원 정보
                  example : 1
                handphone:
                  type: string
                  description: 폴더(일자)
                  example : "010-5125-6889"
                passwd:
                  type: string
                  description: 파일명(시분)
                  example : "1234"
                startDate:
                  type: string
                  description: "게스트키 유효기간 시작일자"
                  example : "2023-04-26 09:00:00"
                stopDate:
                  type: string
                  description: "게스트키 유효기간 종료일자"
                  example : "2023-04-26 22:00:00"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_guestkey'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorGuestkey/{smartdoor_guestkey_id}:
    parameters:
      - name: smartdoor_guestkey_id
        in: path
        description: 'SmartdoorGuestkey의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - 스마트도어 게스트키
      summary: "[본인, 키오스크, 관리자] 스마트도어 게스트키 조회"
      description: '해당 스마트도어나 관리자가 스마트도어 게스트키 정보를 가지고 스마트도어 게스트키 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorGuestkey/search
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_guestkey'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - 스마트도어 게스트키
      summary: "[본인, 키오스크, 관리자] 스마트도어 게스트키 정보를 수정"
      description: '본인 및 관리자가 스마트도어 게스트키 정보를 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorGuestkey/masterModifyProcess
      requestBody:
        description: 스마트도어 게스트키 테이블에 데이터 수정
        content:
          application/json:
            schema:
              type: object
              properties:
                smartdoor_id :
                  type: integer
                  description: 스마트도어 정보
                  example : 1
                user_id :
                  type: integer
                  description: 신청자 회원 정보
                  example : 1
                handphone:
                  type: string
                  description: 핸드폰번호
                  example : "010-5125-6889"
                passwd:
                  type: string
                  description: 비밀번호
                  example : "1234"
                startDate:
                  type: string
                  description: "유효기간 시작일시"
                  example : "2023-04-26 09:00:00"
                stopDate:
                  type: string
                  description: "유효기간 종료일시"
                  example : "2023-04-26 22:00:00"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartdoor_guestkey'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - 스마트도어 게스트키
      summary: "[본인, 관리자] 스마트도어 게스트키 정보 삭제"
      description: "스마트도어 공지 게스트키 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /SmartdoorGuestkey/deleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /SmartdoorGuestkey/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_smartdoor_guestkey_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - 스마트도어 게스트키
      summary: "스마트도어 게스트키 목록"
      description: '특정한 스마트도어 정보를 가지고 스마트도어 게스트키 목록을 리스트 형태의 목록으로 제공<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /SmartdoorGuestkey/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/smartdoor_guestkey'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Fcm:
    post:
      tags:
        - fcm
      summary: fcm 발송
      description: fcm 발<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경송
      operationId: insertFcm
      requestBody:
        description: "UMS을 발송하고 ums 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: "User테이블의 user_id"
                  example : 1
                title:
                  type: string
                  description: 제목
                  example : "Hi-Zib 외부카메라 감지"
                body:
                  type: string
                  description: 내용
                  example : "외부인이 감지되었습니다. 지금 확인하시겠습니까?"
                data:
                  type: string
                  description: "전송 데이터"
                  example : "{\"title\":\"Hi-Zib 외부카메라 감지\",\"body\":\"외부인이 감지되었습니다. 지금 확인하시겠습니까?\",\"click_action\":\"motionDetect\"}"
                options:
                  type: string
                  description: "옵션 설정"
                  example : "{}"
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/fcm'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Fcm/{fcm_id}:
    parameters:
      - name: fcm_id
        in: path
        description: 'Fcm의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - fcm
      summary: "[본인,키오스크,관리자] fcm 정보를 가지고 fcm 발송기록 조회"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: getDataAtFcm
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fcm'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - fcm
      summary: "[본인,키오스크,관리자] fcm 발송 결과를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      requestBody:
        description: "fcm 발송 결과 업데이트"
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: string
                  description: "결과코드"
                  example : ""
                readDate:
                  type: string
                  description: "읽은 시간"
                  example : "2023-06-21 00:23:48"
        required: true
      operationId: /Fcm/masterModifyProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fcm'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Fcm/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_fcm_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - fcm
      summary: "[관리자]  FCM 목록"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Fcm/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/fcm'
                  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Ums:
    post:
      tags:
        - ums
      summary: "[회원,관리자,키오스크] ums 발송"
      description: "ums 발송<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Ums/joinProcess
      requestBody:
        description: "UMS을 발송하고 ums 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: 제목
                  example : "hizib안내"
                callback:
                  type: string
                  description: 회신번호
                  example : "05056336000"
                to_name:
                  type: string
                  description: "받는 사람 성명"
                  example : "김경신"
                to_handphone:
                  type: string
                  description: "받는 사람 핸드폰번호"
                  example : "01051256889"
                msg:
                  type: string
                  description: 내용
                  example : "테스트발송입니다."
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/ums'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Ums/{ums_id}:
    parameters:
      - name: ums_id
        in: path
        description: 'Ums의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - ums
      summary: "[관리자] ums 정보를 가지고 ums 발송기록 조회"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Ums/masterModifyProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ums'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - ums
      summary: "[관리자] ums 발송 결과를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      requestBody:
        description: "UMS을 발송하고 ums 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: "결과코드"
                  example : ""
                succCount:
                  type: integer
                  description: "성공수량"
                  example : 1
                failCount:
                  type: integer
                  description: "실패수량"
                  example : 0
                sendDate:
                  type: string
                  description: "발송시간"
                  example : "2023-06-21 00:23:48"
        required: true
      operationId: /Ums/master
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ums'  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Ums/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_ums_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - ums
      summary: "[관리자] UMS 목록"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Ums/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/ums'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Faq:
    post:
      tags:
        - faq
      summary: "[관리자] 자주하는질문(FAQ) 등록"
      description: "자주하는질문(FAQ) 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Faq/joinProcess
      requestBody:
        description: 스마트도어 공지 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: 질문
                  example : "회원가입은 어디서 하나요?"
                answer:
                  type: string
                  description: 답변
                  example : "회원가입은 APP에서만 가능합니다. 앱을 다운 받운 후 회원가입 하세요."
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
                  message:
                    type: string
                    description: 에러메세지
                  parmas:
                    $ref: '#/components/schemas/faq'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Faq/{faq_id}:
    parameters:
      - name: faq_id
        in: path
        description: 'Faq의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - faq
      summary: "[관리자] 자주하는질문(FAQ) 조회"
      description: "faq_id로 자주하는질문(FAQ) 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Faq/search
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/faq'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - faq
      summary: "[관리자] 자주하는질문(FAQ) 정보를 수정"
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Faq/modifyProcess
      requestBody:
        description: 스마트도어 공지 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: 질문
                  example : "회원가입은 어디서 하나요?"
                answer:
                  type: string
                  description: 답변
                  example : "회원가입은 APP에서만 가능합니다. 앱을 다운 받운 후 회원가입 하세요."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/faq'         
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - faq
      summary: "[본인, 관리자] 자주하는질문(FAQ) 정보 삭제"
      description: "자주하는질문(FAQ) 정보 모두 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Faq/deleteProcess
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Faq/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_faq_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - faq
      summary: "자주하는질문(FAQ) 목록"
      description: "<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: /Faq/lists
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/faq'                  
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Qna:
    post:
      tags:
        - qna
      summary: "[본인] Qna 등록"
      description: "Qna 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: "/Qna/joinProcess"
      requestBody:
        description: "Qna 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 질문
                  example : "회원가입은 어디서 하나요?"
                comment:
                  type: string
                  description: 내용
                  example : "회원가입을 하고 싶습니다. 어디서 하나요?"
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/qna'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Qna/{qna_id}:
    parameters:
      - name: qna_id
        in: path
        description: Qna의 고유번호
        required: true
        schema:
          type: integer
    get:
      tags:
        - qna
      summary: "Qna 정보를 가지고 Qna 조회"
      description: "qna_id으로 정보 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: "/Qna/search"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/faq'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - qna
      summary: "[본인, 관리자] Qna 정보를 수정"
      description: "/User/login OR /Admin/login 로그인 후 정보 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: modifyQna
      security:
        - bearerAuth: []
      requestBody:
        description: Qna 테이블에 데이터 저장
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 질문
                  example : "회원가입은 어디서 하나요?"
                comment:
                  type: string
                  description: 내용
                  example : "회원가입을 하고 싶습니다. 어디서 하나요?"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/qna'         
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - qna
      summary: "[본인, 관리자] Qna 정보 삭제"
      description: "/User/login OR /Admin/login 로그인 후 정보 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: deleteQna
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Qna/lists:
    parameters:
      - name: page
        in: query
        description: "페이지"
        schema:
          type: integer
          example: 1
      - name: rowsPerPage
        in: query
        description: "한줄에 보일 갯수"
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: "정렬"
        schema:
          type: string
          example: "a_qna_id"
      - name: desc
        in: query
        description: "정순 asc / 역순 desc"
        schema:
          type: string
          example: "desc"
      - name: keyword
        in: query
        description: "검색어"
        schema:
          type: string
          example: ""
      - name: isAll
        in: query
        description: "전체를 출력할지 기본값 0"
        schema:
          type: integer
          example: 0
    get:
      tags:
        - qna
      summary: Qna 목록
      description: '<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: /Qna/lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: "전체 갯수"
                  totalPages :
                    type: integer
                    description: "전체 페이지수"
                  page :
                    type: integer
                    description: "현재페이지"
                  rowsPerPage :
                    type: integer
                    description: "페이지당 갯수"
                  sort :
                    type: string
                    description: "정렬"
                  desc :
                    type: string
                    description: "정순/역순"
                  keyword :
                    type: string
                    description: "검색어"
                  lists :
                    type: array
                    items:
                      $ref: '#/components/schemas/faq'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Qna/replyProcess:
    parameters:
      - name: qna_id
        in: query
        description: "qna_id"
        schema:
          type: integer
          example: 1
    post:
      tags:
        - qna
      summary: "[관리자] Qna 답변"
      description: '/Admin/login으로 로그인 후 답변 작성성<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      requestBody:
        description: "Qna 테이블에 데이터 저장"
        content:
          application/json:
            schema:
              type: object
              properties:
                reply:
                  type: string
                  description: 답변
                  example : "회원가입은 APP에서만 가능합니다. 앱을 다운 받운 후 회원가입 하세요."
      operationId: "/Qna/replyProcess"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Code:
    post:
      tags:
        - Code
      summary: "[관리자] Code 등록"
      description: "/Admin/login으로 받은 토큰을 통해 로그인한 관리자가 코드 정보 등록<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 코드 등록시 정렬 순서 재정리"
      operationId: "/Code/joinProcess"
      requestBody:
        description: "코드 정보 등록"
        content:
          application/json:
            schema:
              type: object
              properties:
                gcode:
                  type: string
                  description: "코드그룹명"
                  example : "SMARTDOOR_LOG_TYPE"
                code:
                  type: string
                  description: "코드"
                  example : "1"
                name:
                  type: string
                  description: "명칭"
                  example : "비밀번호 (입실)"
                nickname:
                  type: string
                  description: "별칭"
                  example : "비밀번호 (입실)"
                sortNum:
                  type: string
                  description: "순서"
                  example : "1"
                isUse:
                  type: string
                  description: "사용여부 (1:사용 0:사용안함)"
                  example : "1"
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/code'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Code/{code_id}:
    parameters:
      - name: code_id
        in: path
        description: 'Code의 고유번호'
        required: true
        schema:
          type: integer
    get:
      tags:
        - Code
      summary: "Code 조회"
      description: '누구나 코드 정보 조회<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경'
      operationId: "/Code/search"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/code'          
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - Code
      summary: "[관리자] code 수정"
      description: "/Admin/login으로 로그인한 뒤 토큰을 헤더에 넣어 해당 코드 정보 수정<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경"
      operationId: "/Code/masterModifyProcess"
      requestBody:
        description: "코드 정보 등록"
        content:
          application/json:
            schema:
              type: object
              properties:
                gcode:
                  type: string
                  description: "코드그룹명"
                  example : "SMARTDOOR_LOG_TYPE"
                code:
                  type: string
                  description: "코드"
                  example : "10"
                name:
                  type: string
                  description: "명칭"
                  example : "방문자 비밀번호 (입실)"
                nickname:
                  type: string
                  description: "별칭"
                  example : "방문자 비밀번호 (입실)"
                sortNum:
                  type: string
                  description: "순서"
                  example : "10"
                isUse:
                  type: string
                  description: "사용여부 (1:사용 0:사용안함)"
                  example : "1"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "성공"
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/code'       
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
    delete:
      tags:
        - Code
      summary: "[관리자] code 삭제"
      description: "code 정보 삭제<br><br>2023-06-23 error처리 형식 response body의 {\"code\":\"\",\"message\":\"\"} 형태로 변경<br>2023-07-04 response타입 변경<br>2023-07-04 코드 삭제시 정렬 순서 재정리"
      operationId: "/Code/deleteProcess"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
             application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: 성공여부
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
  /Code/getListByGcode:
    parameters:
      - name : gcode
        in: query
        description: '코드 그룹'
        required: true
        schema:
          type: string
    get :
      tags:
        - Code
      summary: 코드그룹내 모든 코드 가져오기
      description: ''
      operationId: /Code/getListByGcode
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    code_id :
                      type: integer
                      description: "코드정보"
                    gcode :
                      type: string
                      description: "코드그룹"
                    code :
                      type: string
                      description: "코드"
                    name :
                      type: string
                      description: "명칭"
                    nickname :
                      type: string
                      description: "별칭칭"
                    sortNum :
                      type: integer
                      description: "순서"
                    isUse :
                      type: integer
                      description: "사용여부"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "400"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "전송된 데이터가 JSON 형식이 아닙니다."
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "401"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "유효하지 않는 토큰 정보입니다."
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code :
                    type: string
                    description: "에러코드"
                    example: "404"
                  message:
                    type: string
                    description: "애러메시지"
                    example: "지원하지 않는 서비스입니다."
        '500':
          description: "Internal Server Error"
components:
  schemas:
    Error:
        type: object
        properties:
          code:
            type: string
          message:
            type: string
        required:
          - code
          - message
    admin:
      type: object
      properties:
        admin_id:
          type: integer
          format: int64
          example: 10
        id:
          description: "아이디 정규식(/^(?=.*[a-z0-9])[a-z0-9]{3,16}$/) 3자이상 16자이하, 영어또는 숫자"
          type: string
          example: test
        passwd:
          description: "비밀번호 정규식(/^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*()._-]{6,16}$/) 6자이상 16자이하, 영어와 숫자 특수문자를 조합하여 생성"
          type: string
          example: 1234
        name:
          description : "이름 정규식(/^[가-힣]{2,4}$/) 한글이름 2~4자이내"
          type: string
          example: 테스터
        handphone:
          type: string
          description: "핸드폰 정규식(/^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/)"
          format: string
          example: '010-1223-2414'
        email:
          type: string
          description: "이메일 정규식"
          format: string
          example: 'test@test.com'
        loginTimes:
          type: integer
          description: "로그인횟수"
          example: 10
        lastLogin:
          type: string
          description: "마지막 로그인 시간"
          example: '2023-03-01 00:00:00'
        regDate:
          type: string
          description: "등록일자"
          example: '2023-03-01 00:00:00'
      xml:
        name: admin
    user:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 10
        id:
          description: "아이디 정규식(/^(?=.*[a-z0-9])[a-z0-9]{3,16}$/) 3자이상 16자이하, 영어또는 숫자"
          type: string
          example: test
        passwd:
          description: "비밀번호 정규식(/^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*()._-]{6,16}$/) 6자이상 16자이하, 영어와 숫자 특수문자를 조합하여 생성"
          type: string
          example: 1234
        fcm_token:
          type: string
          example: 'sdfadgdsgadgsdgewewerwfsdfsdfsdf'
        name:
          description : "이름 정규식(/^[가-힣]{2,4}$/) 한글이름 2~4자이내"
          type: string
          example: 테스터
        nickname:
          description: "닉네임 정규식(/^(?=.*[a-z0-9가-힣])[a-z0-9가-힣]{2,16}$/)  2자 이상 16자 이하, 영어 또는 숫자 또는 한글로 구성"
          type: string
          example: 'test'
        ci:
          type: string
          example: 'setsetsetsetsetsetsetsetsetsetsetsdgfcbretqrgfdsgsfgdgf'
        handphone:
          type: string
          description: "핸드폰 정규식(/^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/)"
          format: string
          example: '010-1223-2414'
        email:
          type: string
          description: "이메일 정규식"
          format: string
          example: 'test@test.com'
        picture:
          type: string
          description: "프로필사진"
          format: string
          example: '/image/picture/1.png'
        faces:
          type: string
          description: "안면인식용 사진"
          example: '{["/image/faces/1/1.png","/image/faces/1/2.png","/image/faces/1/3.png"]}'
        loginTimes:
          type: integer
          description: "로그인횟수"
          example: 10
        lastLogin:
          type: string
          description: "마지막 로그인 시간"
          example: '2023-03-01 00:00:00'
        regDate:
          type: string
          description: "등록일자"
          example: '2023-03-01 00:00:00'
        isUse:
          type: integer
          description: "사용여부"
          example: 1
      xml:
        name: user
    code :
      type: object
      properties :
        code_id:
          type: integer
          format: int64
          example: 1
        gcode:
          type: string
          example: 'SMARTDOOR_LOG_TYPE'
        code:
          type: string
          example: '1'
        name:
          type: string
          example: '비밀번호 (입실)'
        nickname : 
          type: string
          example: '비밀번호 (입실)'
        sortNum:
          type: integer
          format: int64
          example: 1
        isUse:
          type: integer
          format: int64
          example: 1
    logger :
      type: object
      properties :
        logger_id:
          type: integer
          format: int64
          example: 10
        type:
          type: integer
          format: int64
          example: 1
        location:
          type: string
          example: '1'
        data:
          type: string
          example: ''
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    fcm :
      type: object
      properties :
        fcm_id:
          type: integer
          format: int64
          example: 10
        user_id :
          type: integer
          format : int64
          example : 1
        title:
          type: string
          example: 'Hi-Zib 외부카메라 감지'
        body:
          type: string
          example: '외부카메라가 감지되었습니다. 지금  확인하시겠습니까?'
        data:
          type: string
          example: '{“smartdoor_id”:1, “title”,”Hi-Zib 외부카메라 감지”,”body”:”외부카메라가 감지되었습니다. 지금  확인하시겠습니까?”,”click_action”:”motionDetect”}'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
        readDate :
          type : string
          example : '2023-03-10 20:50:18'
        status :
          type: integer
          format : int64
          example : 1
    faq:
      type: object
      properties :
        faq_id:
          type: integer
          format: int64
          example: 10
        question:
          type: string
          example: '회원탈퇴는 어떻게 하나요?'
        answer:
          type: string
          example: '회원탈퇴는 마이페이지>회원탈퇴 메뉴를 이용해 회워탈퇴 가능합니다.'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    qna:
      type: object
      properties :
        qna_id:
          type: integer
          format: int64
          example: 10
        user_id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: '문의드립니다.'
        comment:
          type: string
          example: '회원가입은 어디서 하나요?'
        reply:
          type: string
          example: '답변드립니다. 회원가입은 화면 상단 우측 버튼을 통해 합니다.'
        replyDate :
          type : string
          example : '2023-03-10 20:50:18'
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
        status :
          type: integer
          format: int64
          example: 1
    ums:
      type: object
      properties :
        ums_id:
          type: integer
          format: int64
          example: 10
        code:
          type: string
          example: '{"ncloud_sms_id":"1"}'
        subject:
          type: string
          example: 'Hi-Zib회원가입 문자안내'
        callback:
          type: string
          example: '025556666'
        callbackUrl:
          type: string
          example: ''
        toPerson:
          type: string
          example: '이름없음^01023445555|이름없음^01022223333'
        msg:
          type: string
          example: '회원가입하려면 [233445] 인증번호를 입력하세요.'
        requestUrl:
          type: string
          example: 'https://www.smartdoor.com/'
        ip:
          type: string
          example: '218.232.145.23'
        totalCount:
          type: integer
          format: int64
          example: 2
        succCount:
          type: integer
          format: int64
          example: 1
        failCount:
          type: integer
          format: int64
          example: 1
        isRsv:
          type: integer
          format: int64
          example: 0
        sendDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    weather :
      type: object
      properties :
        weather_id:
          type: integer
          format: int64
          example: 10
        areacode:
          type: string
          example: '09545101'
        timecode:
          type: string
          example: '2023031011'
        temperature:
          type: string
          example: '26.2'
        sky : 
          type: string
          example: '맑음'
        icon:
          type: integer
          format: int64
          example: 1
        finedust:
          type: string
          example: '26.2'
        ultrafinedust:
          type: string
          example: '26.2'
        uvrays:
          type: string
          example: '26.2'
        lists:
          type: string
          example: '[{"temperature":"온도","sky":"하늘상태","icon":"하늘상태아이콘"}]'
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_group:
      type: object
      properties:
        smartdoor_group_id:
          type: integer
          format: int64
          example: 10
        areacode:
          type: string
          example: test
        name:
          type: string
          example: 테스터
        address:
          type: string
          example: '{"zipcode":"우편번호","country":"국가","addressMain":"도로명주소","addressDetail":"나머지주소"}'
    smartdoor:
      type: object
      properties :
        smartdoor_id :
          type : integer
          format : int64
          example : 10
        smartdoor_group_id :
          type : integer
          format : int64
          example : 1
        code :
          type : string
          example : '20230315001'
        name :
          type : string
          example : '우리집'
        ble :
          type : string
          example : ''
        dong :
          type : string
          example : '동'
        ho :
          type : string
          example : '호'
        isDoorOpen :
          type : integer
          example : 1
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
        status :
          type : integer
          format : int64
          example : 1
    smartdoor_schedule :
      type: object
      properties :
        smartdoor_schedule_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        name :
          type : string
          example : '공연 참석'
        dday :
          type : string
          example : '2023-03-10'
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_notice :
      type: object
      properties :
        smartdoor_notice_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        title :
          type : string
          example : '날씨 추우니 많이 챙겨입어라'
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_message :
      type: object
      properties :
        smartdoor_message_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        from_user_id :
          type: integer
          format : int64
          example : 1
        msg :
          type : string
          example : '지금 어디니?'
        updateDate :
          type : string
          example : '2023-03-10 20:50:18'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_user :
      type: object
      properties :
        smartdoor_user_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        user_id :
          type: integer
          format : int64
          example : 1
        isOwner :
          type: integer
          format : int64
          example : 1
        isDoorbell :
          type: integer
          format : int64
          example : 1
        isAccessRecord :
          type: integer
          format : int64
          example : 1
        isMotionDetect :
          type: integer
          format : int64
          example : 1
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
        isUse:
          type: integer
          format: int64
          example: 1
    smartdoor_user_invite :
      type: object
      properties :
        smartdoor_user_invite_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        user_id :
          type: integer
          format : int64
          example : 1
        name :
          type : string
          example : '홍길동'
        handphone :
          type : string
          example : '010-2222-3333'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_log :
      type: object
      properties :
        smartdoor_log_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        user_id :
          type: integer
          format : int64
          example : 1
        type :
          type: integer
          format : int64
          example : 1
        code :
          type : string
          example : '0000'
        msg :
          type : string
          example : '비밀번호(입실)로 출입하셨습니다.'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_guestkey :
      type: object
      properties :
        smartdoor_guestkey_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        user_id :
          type: integer
          format : int64
          example : 1
        handphone :
          type: string
          example : '010-2222-3333'
        passwd :
          type : string
          example : '123456'
        startDate :
          type : string
          example : '2023-03-10 00:00:00'
        stopDate :
          type : string
          example : '2023-03-10 23:59:59'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
        status :
          type : integer
          format : int64
          example : 0
    smartdoor_item :
      type: object
      properties :
        smartdoor_item_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        user_id :
          type: integer
          format : int64
          example : 1
        name :
          type: string
          example : '010-2222-3333'
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
    smartdoor_vod :
      type: object
      properties :
        smartdoor_vod_id:
          type: integer
          format : int64
          example : 1
        smartdoor_id:
          type: integer
          format : int64
          example : 1
        gcode :
          type: string
          example : '20230211'
        code :
          type: string
          example : '1101'
        filepath :
          type: string
          example : '/home/smartdoor/vod/20230211/1101.mp4'
        fileurl :
          type: string
          example : 'https://smartdoor.com/vod/20230211/1101.mp4'
        filename :
          type: string
          example : '1101.mp4'
        comment :
          type: string
          example : ''
        regDate :
          type : string
          example : '2023-03-10 20:50:18'
  requestBodies:
    User:
      description: 회원정보
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT